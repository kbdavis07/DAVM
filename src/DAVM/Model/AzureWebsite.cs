using DAVM.Common;
using Microsoft.WindowsAzure.Management.WebSites.Models;
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool
//     Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Net;
using System.Text;
using System.Threading.Tasks;

namespace DAVM.Model
{

    public class AzureWebSite : AzureResource
    {
        public AzureWebSite(AzureSubscription owner)
        {
            Subscription = owner;
			Status = ResourceStatus.Unknown;
        }

        #region properties

        public override String ID { get { return this.WebspaceName +"_"+ this.Name; } }


        public override String AzureResourceType
        {
            get { return "App Web"; }
        }

        public String WebspaceName
        {
            get;
            set;
        }

		public String _location;
		public String Location
		{
			get { return _location; }
			set
			{
				if (value != _location)
				{
					_location = value;
					RaisePropertyChanged("Location");
				}
			}
		}

		private SkuOptions _plan;
        public SkuOptions Plan
		{
			get { return _plan; }
			set
			{
				if (value != _plan)
				{
                    _plan = value;
					RaisePropertyChanged("Plan");
				}
			}
		}

		public HashSet<String> _fqdns;
        public HashSet<String> FQDNs
        {
            get { return _fqdns; }
            set
            {
                if (value != _fqdns)
                {
                    _fqdns = value;
                    RaisePropertyChanged("FQDNs");
                }
            }
        }

     
		#endregion

		#region methods

		public override string GetVerboseDetails() {
			StringBuilder sb = new StringBuilder();
			sb.AppendFormat("[{0}]\n", Name);
			sb.AppendLine(String.Format("Status: {0}", Status));
            foreach(string hostname in FQDNs)
			  sb.AppendLine(String.Format("FQDN: {0}", hostname));
			sb.AppendLine(String.Format("Location: {0}", Location));
            sb.AppendLine(String.Format("Webspace: {0}", WebspaceName));
            sb.AppendLine(String.Format("Plan: {0}", Plan));
            sb.AppendLine(String.Format("Subscription ID: {0}", Subscription.ID));
			return sb.ToString();
		}

		#endregion
	}

	

}

